<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8">
    <title>TransGame</title>
<!--<style type="text/css" src='jquery-ui.css'></style>-->
<!--<style type="text/css" src='ui.notify.css'></style>-->
<link rel="stylesheet" type="text/css" href="css/jquery.gritter.css" />
<link href='css/bootstrap.css' rel='stylesheet' type='text/css'>
<style type="text/css">

/* Apply the element you want to drag/resize */
.drsElement {
 position: absolute;
 border: 1px solid #333;

//opacity:0.5;
//filter:alpha(opacity=50);
}


/*
.drsElement:hover {
 position: absolute;
 border: 1px solid #333;

opacity:1.0;
filter:alpha(opacity=100);
}
*/

/*
 The main mouse handle that moves the whole element.
 You can apply to the same tag as drsElement if you want.
*/
.drsMoveHandle {
 height: 20px;
 background-color: #CCC;
 border-bottom: 1px solid #666;
 cursor: move;
}

/*
 The DragResize object name is automatically applied to all generated
 corner resize handles, as well as one of the individual classes below.
*/
.dragresize {
 position: absolute;
 width: 5px;
 height: 5px;
 font-size: 1px;
 background: #EEE;
 border: 1px solid #333;
 
 
}

/*
 Individual corner classes - required for resize support.
 These are based on the object name plus the handle ID.
*/
.dragresize-tl {
 top: -8px;
 left: -8px;
 cursor: nw-resize;
}
.dragresize-tm {
 top: -8px;
 left: 50%;
 margin-left: -4px;
 cursor: n-resize;
}
.dragresize-tr {
 top: -8px;
 right: -8px;
 cursor: ne-resize;
}

.dragresize-ml {
 top: 50%;
 margin-top: -4px;
 left: -8px;
 cursor: w-resize;
}
.dragresize-mr {
 top: 50%;
 margin-top: -4px;
 right: -8px;
 cursor: e-resize;
}

.dragresize-bl {
 bottom: -8px;
 left: -8px;
 cursor: sw-resize;
}
.dragresize-bm {
 bottom: -8px;
 left: 50%;
 margin-left: -4px;
 cursor: s-resize;
}
.dragresize-br {
 bottom: -8px;
 right: -8px;
 cursor: se-resize;
}



.bottomC {
width:800px;
height:400px;
position: fixed;
top: 70%;
left: 50%;
margin-left: -400px;
margin-top: -200px;
//margin-left: -100px;
//margin-top: -100px;
border: 2px solid;
border-radius: 10px;
-moz-border-radius: 10px;
background-color: #b0c4de;
z-index:100;
opacity:0.5;
filter:alpha(opacity=50);
}

.bottomC:hover {
opacity:1.0;
filter:alpha(opacity=100);
}

.highlight {
background-color: #ffff00;
}
.topC {
width:800px;
height:50px;
position: fixed;
top: 20%;
left: 50%;
margin-left: -400px;
margin-top: -50px;
//margin-left: -100px;
//margin-top: -100px;
border: 2px solid;
border-radius: 10px;
-moz-border-radius: 10px;
background-color: #b0c4de;
z-index:100;
}

.leftAvatar {
width:100px;
height:200px;
position: fixed;
top: 50%;
left: 10%;
margin-left: -50px;
margin-top: -100px;
//margin-left: -100px;
//margin-top: -100px;
border: 2px solid;
border-radius: 10px;
-moz-border-radius: 10px;
background-color: #b0c4de;
z-index:100;
}

.rightAvatar {
width:100px;
height:200px;
position: fixed;
top: 50%;
left: 90%;
margin-left: -50px;
margin-top: -100px;
//margin-left: -100px;
//margin-top: -100px;
border: 2px solid;
border-radius: 10px;
-moz-border-radius: 10px;
background-color: #b0c4de;
z-index:100;
}

/*
ul.navlist {
list-style: none;
display: block;
padding: 0;
margin-left: 0.5em;
margin-right: 0.5em;
}

ul.navlist li a, ul.navlist li b {
	display: block;
	width: 7em;
	font: 12px Verdana, Arial, Helvetica, sans-serif;
	font-weight: normal;
	text-decoration: none;
	text-align: center;
	color: #ffffff;
	background-color: #0000ff;
	padding-top: 0.2em;
	padding-right: 1em;
	padding-bottom: 0.2em;
	padding-left: 1em;
	border: 0.2em solid;
	border-color: #3366FF #000066 #000066 #3366FF;
	width: 96%;
}

ul.navlist li a:hover, ul.navlist li b {
	text-decoration: none;
	color: #FFFF00;
	background-color: #0000cc;
	padding-top: 0.3em;
	padding-right: 0.9em;
	padding-bottom: 0.1em;
	padding-left: 1.1em;
	border: 0.2em solid;
	border-color: #000066 #3366FF #3366FF #000066;
	width: 96%;
}

ul.navlist li a:active, ul.navlist li b {
	color: #FF9900;
}
*/

ul
{
list-style-type: none;
padding: 0;
margin: 0;
}

li
{
border-style:solid;
border-width:2px;
border-color:transparent;
}

li:hover
{
-webkit-border-radius: 10px;
-moz-border-radius: 10px;
border-radius: 10px;
border-style:solid;
border-width:2px;
border-color:black;
}

.selectedTrans {
-webkit-border-radius: 10px;
-moz-border-radius: 10px;
border-radius: 10px;
border-style:solid;
border-width:2px;
border-color:yellow;
}

/* End Menu */

body {
  margin: 0;
}

.fullscreen {
position:absolute;
left:0;
right:0;
top:0;
bottom:0;
border: 0;
width: 100%;
height: 100%;
margin:auto;"
}




body{
margin: 0;
padding: 0;
border: 0;
overflow: hidden;
height: 100%; 
max-height: 100%; 
}

#framecontent{
position: absolute;
top: 0; 
left: 0;
width: 250px; /*Width of frame div*/
height: 40%;
overflow: auto; /*Disable scrollbars. Set to "scroll" to enable*/
background: green;
color: white;
}

#chatregionframe{
position: absolute;
top: 0;
right: 0;
width: 250px; /*Width of frame div*/
height: 40%;
overflow: hidden; /*Disable scrollbars. Set to "scroll" to enable*/
background: navy;
color: white;
}

#topcontent{
position: fixed;
top: 0; 
left: 250px;
right: 250px;
height: 40%;
overflow: auto; /*Disable scrollbars. Set to "scroll" to enable*/
background: navy;
color: white;
}

#maincontent{
position: fixed;
top: 40%;
right: 0;
left: 0; /*Set right value to WidthOfFrameDiv*/
bottom: 0;
overflow: auto; 
background: #fff;
}

.innertube{
margin: 15px; /*Margins for inner DIV inside each DIV (to provide padding)*/
}

* html body{ /*IE6 hack*/
padding: 0 200px 0 0; /*Set value to (0 WidthOfFrameDiv 0 0)*/
}

* html #maincontent{ /*IE6 hack*/
height: 100%; 
width: 100%; 
}


</style>
</head>
<script src="jquery.min.js"></script>
<script src="jquery.cookie.js"></script>
<!--<script src="jquery-ui.min.js"></script>-->
<script src="jquery.gritter.min.js"></script>
<!--<script src="jquery.notify.js"></script>-->
<script src="etherpad.js"></script>
<script src="base64.js"></script>
<script src="md5.js"></script>
<script src="dragresize.js"></script>
<script src="http://<%= servername %>:9000/nowjs/now.js"></script>
<script>

String.prototype.replaceAll = function (replaceThis, withThis) {
   return this.split(replaceThis).join(withThis)
};

userid = $.cookie('transgame_userid');
if (userid == null) {
  alert('warning: no userid, going back to login page');
  window.location = 'login.html';
  //userid = Math.floor(Math.random()*10000001);
  //$.cookie('transgame_userid', userid, { expires: 7, path: '/' });
}

now.userid = userid
now.url = '<%= urlD %>'
gameid = '<%= urlD %>'

now.updateTime = function(time){
  var prevTime = $("#timeDisplay").text()
  $("#timeDisplay").text(time);
  if (time != '0') {
    $("#roundTimerDisplay").css("visibility", "visible")
  }
  if (time == '0' && prevTime != '0') {
    endOfRound()
  } else if (time != '0' && prevTime == '0') {
    startOfRound()
  }
}

now.sendNewScores = function(userScores, userList) {
  var curhtml = ''
  for (var i = 0; i < userList.length; ++i) {
    var curUser = userList[i]
    var score = userScores[curUser]
    curhtml += curUser + ': ' + score + '<br/>'
  }
  $('#scoreBoardRegionContents').html(curhtml)
}

textBeingTranslated = '';
prevVotingRegionHTML = '';

now.setTextToBeTranslated = function(text, userSuggestingText) {
  //$.gritter.removeAll()
  $("#roundTimerDisplay").css("visibility", "visible")
  $("#translationRegionNoSuggestion").show()
  if (text == $('#text_to_be_translated_suggestion').text()) {
    now.suggestNewTextToBeTranslated('', userid);
    setTextInSuggestionBox('');
  }
  setTextBeingTranslated(text, userSuggestingText)
  clearVoting();
}

now.askForTextSuggestions = function() {
/*
if ($('.gritter-item').length == 0) {
$.gritter.add({
	// (string | mandatory) the heading of the notification
	title: 'Select a sentence to translate',
	// (string | mandatory) the text inside the notification
	text: 'Highlight a sentence from the article that you want to translate.',
	sticky: true,
});
}
*/

$('#suggestTextLabel').text('Highlight a sentence from the article that you want to translate.')
$('#textSuggestionRegion').show()

$("#translationRegionNoSuggestion").hide(600)
$("#roundTimerDisplay").css("visibility", "hidden")
}

now.quitUser = function(quserid, qgameid) {
if (userid != quserid) {
  return
}
if (qgameid == gameid) {
  return
}
/*
$.gritter.add({
	// (string | mandatory) the heading of the notification
	title: 'Left game',
	// (string | mandatory) the text inside the notification
	text: "You've joined another game, and hence can't continue playing this one.",
	sticky: true,
});
*/
  $('#mainBody').html(userid + ", you've joined another game at " + qgameid + ", and hence can't continue playing this one.")
  now.disconnect(userid, '<%= urlD %>')
  throw new Error('Abort Javascript');
}

function submitNewTranslation() {

//console.log('submitting translation');
translation = $('#add_translation').val();
//console.log(translation);

sendTranslation(translation);

$('#add_translation').val('')
return false;
}

function submitNewTextBeingTranslated() {
//clearVoting();
//console.log('submitting new text to be translated');
var text = $('#text_to_be_translated_suggestion').text();

now.suggestNewTextToBeTranslated(text, userid);
//clearVoting();
return false;
}

function submitStartTimer() {
$.get('startround.cgi.py?gameid=<%= gameidsubs %>', function(data) {
console.log(data);
});
return false;
}

function submitSwitchRound() {
$.get('switchround.cgi.py?gameid=<%= gameidsubs %>', function(data) {
console.log(data);
});
return false;
}

function sendTranslation(translation) {
now.submitTranslation(translation, userid)
//$.get('translate.cgi.py?gameid=<%= gameidsubs %>&userid=' + userid + '&text=' + encode64(textBeingTranslated) + '&translation=' + translation, function(data) {
//console.log(data);
//});
}

function sendTranslationEscaped(translation) {
sendTranslation(unescape(translation))
}

function rpartition(s, sep) {
l = s.split(sep);
right = l[l.length - 1];
left = l.slice(0, l.length - 1);
return [left, right]
}

function clearVoting() {
$('#add_translation').val('')
$('#voting-region').html('');
prevVotingRegionHTML = '';
}

/*
function reloadTime() {
$.get('timeleft.cgi.py?gameid=<%= gameidsubs %>', function(data) {
console.log(data);
timeleft = parseInt(data)
timeleft += Math.round(0.1*textBeingTranslated.length);
data = timeleft.toString();
$('#timeDisplay').text(data);
});

}
*/

now.sendFinalTranslation = function(textBeingTranslated, bestTranslation) {
  //var newText = getFrameHTML().replaceAll(textBeingTranslated, bestTranslation)
  //setFrameHTML(newText)
  replaceFrameText(textBeingTranslated, bestTranslation)
}

now.sendUserTranslations = function(translationToUserList, translationsByOrderSubmitted) {
  var htmlpage = '<div id="navcontainer"><ul class="navlist">';
  var byVotes = [];
  for (var i = 0; i < translationsByOrderSubmitted.length; ++i) {
    var translation = translationsByOrderSubmitted[i];
    var votingUsers = translationToUserList[translation];
    if (votingUsers == null)
      continue;
    var contributingUser = votingUsers[0];
    if (contributingUser == null)
      continue;
    
    var spanClass = '';
    if ($.inArray(userid, votingUsers) != -1) {
      spanClass = 'class="selectedTrans"';
    }
    var curhtml = '<li onclick="sendTranslationEscaped(\'' + escape(translation) + '\')" ' + spanClass + ' >';
    var numVotes = votingUsers.length;
    if (numVotes > 5) {
      numVotes = 5;
    }
    var numNoVotes = 5 - numVotes;
    for (var j = 0; j < numNoVotes; ++j) {
      curhtml += '<img src="not-moderated.png" style="float: left" />';
    }
    for (var j = 0; j < numVotes; ++j) {
      var votingUserName = votingUsers[j];
      curhtml += '<img src="accurate-moderated.png" style="float: left" title="' + votingUserName + '" alt="' + votingUserName + '" />';
    }
    
    curhtml += '<img src="check_22.png" style="float: left" title="Vote as accurate" alt="Vote as accurate" />';
    curhtml += '<img src="smiley_22.png" style="float: left" title="Vote as funny" alt="Vote as funny" />';
    
    curhtml += translation + ' (<i>' + contributingUser + '</i>)</li>';
    byVotes[byVotes.length] = [votingUsers.length, curhtml];
  }
  for (var i = 0; i < byVotes.length; ++i) {
    htmlpage += byVotes[i][1];
  }
  htmlpage += '</ul></div>';
  if (htmlpage != prevVotingRegionHTML) {
    prevVotingRegionHTML = htmlpage;
    $('#voting-region').html(htmlpage);
  }
}

function showOrHide(elem) {
  if ((elem).css("display") == "none") {
    elem.show();
  }
  else {
    elem.hide();
  }
}

function endOfRound() {
  
}

function startOfRound() {
  if ($('#text_to_be_translated_suggestion').text() == '') {
    $('#textSuggestionRegion').hide()
  }
}

function isRoundOver() {
  return $('#timeDisplay').text() == '0'
}

function setTextInSuggestionBox(txt) {
$('#text_to_be_translated_suggestion').text(txt);
if (txt == '') {
$('#suggestTextLabel').text('Highlight a sentence from the article that you want to translate.')
} else {
$('#suggestTextLabel').text('Sentence I suggested to be translated during the next round: ')
$('#textSuggestionRegion').show()
}
}

/** Copy selected text into suggestions input textbox */ 
function copySelectedText() {
  var txt = '';
  var iframe = document.getElementById('frameConts');
  if (window.getSelection) {
    var iwindow = iframe.contentWindow || iframe.contentDocument.defaultView;
    txt = ''+iwindow.getSelection();
  }
  else if (document.getSelection) {
    var idocument = iframe.contentDocument || iframe.contentWindow.document;
    txt = ''+idocument.getSelection();
  }
  else if (document.selection) {
    var idocument = iframe.contentDocument || iframe.contentWindow.document;
    txt = idocument.selection.createRange().text;
  }
  else return;
  if (txt == '')
    return
  setTextInSuggestionBox(txt);
  submitNewTextBeingTranslated()
}


function getFrameHTML() {
return frames['frameConts'].document.body.innerHTML;
}

function setFrameHTML(nval) {
frames['frameConts'].document.body.innerHTML = nval;
}

function getFrameDom() {
return frames['frameConts'].document.body;
}

function getTreeWalker() {
return document.createTreeWalker(
        frames['frameConts'].document.body,
        NodeFilter.SHOW_TEXT, 
        null, 
        false
    );
}

function replaceFrameText(origtxt, newtxt) {
  var walker = getTreeWalker()
  var node;
  while(node = walker.nextNode()) {
    node.nodeValue = node.nodeValue.replaceAll(origtxt, newtxt)
  }
}

function removeHighlights() {
  var walker = getTreeWalker()
  var node;
  var gHSO = '<'
  gHSO += '!--gHighlightStartOpen-->'
  var gHEO = '<'
  gHEO += '!--gHighlightEndOpen-->'
  var gHSC = '<'
  gHSC += '!--gHighlightStartClose-->'
  var gHEC = '<'
  gHEC += '!--gHighlightEncClose-->'
  //var newText = getFrameHTML().replaceAll(gHSO + '<span style="background-color: yellow">' + gHEO, '').replaceAll(gHSC + '</span>' + gHEC, '')
  //newText = newText.replaceAll(text, gHSO + '<span style="background-color: yellow">' + gHEO + text + gHSC + '</span>' + gHEC);
  while (node = walker.nextNode()) {
    if (node.parentElement != null) {
      node.parentElement.innerHTML = node.parentElement.innerHTML.replaceAll(gHSO + '<span style="background-color: yellow">' + gHEO, '').replaceAll(gHSC + '</span>' + gHEC, '')
    }
  }
}

function highlightFrameText(text) {
  removeHighlights()
  var walker = getTreeWalker()
  var node;
  var gHSO = '<'
  gHSO += '!--gHighlightStartOpen-->'
  var gHEO = '<'
  gHEO += '!--gHighlightEndOpen-->'
  var gHSC = '<'
  gHSC += '!--gHighlightStartClose-->'
  var gHEC = '<'
  gHEC += '!--gHighlightEncClose-->'
  //var newText = getFrameHTML().replaceAll(gHSO + '<span style="background-color: yellow">' + gHEO, '').replaceAll(gHSC + '</span>' + gHEC, '')
  //newText = newText.replaceAll(text, gHSO + '<span style="background-color: yellow">' + gHEO + text + gHSC + '</span>' + gHEC);
  while (node = walker.nextNode()) {
    if (node.parentElement != null) {
      if (node.nodeValue.indexOf(text) != -1) {
        node.parentElement.innerHTML = node.parentElement.innerHTML.replaceAll(text, gHSO + '<span style="background-color: yellow">' + gHEO + text + gHSC + '</span>' + gHEC);
      }
    }
  }
}

collapsedElemHeights = {}

function collapseOrExpand(elem) {
  var elemHeight = elem.height();
  if (elemHeight == 0) {
    elem.height(collapsedElemHeights[elem]);
  } else {
    collapsedElemHeights[elem] = elemHeight;
    elem.height(0);
  }
}

function setTextBeingTranslated(text, userSuggestingText) {
  textBeingTranslated = text;
  if (text == '') {
    $('#text_being_translated').html('')
  } else {
    $('#text_being_translated').html('<b>' + textBeingTranslated + '</b>' + ' <i>(suggested by ' + userSuggestingText + ')</i>');
  highlightFrameText(text)
  console.log('set text being translated to ' + text)
  }
}

//now.ready(function() {
//  now.sendTextBeingTranslatedToCallback(setTextBeingTranslated)
//})

now.groupAddingFinished = function() {
  now.sendTextBeingTranslatedToCallback(setTextBeingTranslated)
}

$(document).ready(function(){
/*
var oRequest = new XMLHttpRequest();
var sURL  = 'content.html';
oRequest.open("GET",sURL,false);
oRequest.setRequestHeader("User-Agent",navigator.userAgent);
oRequest.send(null);
if (oRequest.status==200) {
alert(oRequest.responseText);
}
*/


//$('#userid_display').html(userid);
$('#chatRegionContents').pad({'padId':'transgame-<%= gameidalphanumericsubs %>', 'host': 'http://transgame.csail.mit.edu:9001', 'height': '100%', 'width': '100%', 'userName': userid, 'showChat': false});
//$('#chatRegionContents').pad({'padId':'transgame-<%= gameidalphanumericsubs %>', 'height': '100%', 'width': '100%', 'userName': userid, 'showChat': true});

//$('#scoreBoardRegionContents').pad({'padId':'transgams-<%= gameidalphanumericsubs %>', 'height': '100%', 'userName': userid});
docWidth = $(document).width();
docHeight = $(document).height();


$('#translateRegion').width(docWidth/2);
$('#translateRegion').height(docHeight/2);
$('#translateRegion').offset({left:docWidth/4,top:docHeight/4});

$('#chatRegion').width(docWidth/4 - 40);
$('#chatRegion').height(docHeight/2);
$('#chatRegion').offset({left:3*docWidth/4 + 20,top:docHeight/4});

$('#scoreBoardRegion').width(docWidth/4 - 40);
$('#scoreBoardRegion').height(docHeight/2);
$('#scoreBoardRegion').offset({left:20, top:docHeight/4});

$('#timeRegion').width(100);
$('#timeRegion').height(50);
$('#timeRegion').offset({left: 0, top: 0});

// Using DragResize is simple!
// You first declare a new DragResize() object, passing its own name and an object
// whose keys constitute optional parameters/settings:

var dragresize = new DragResize('dragresize',
 {  });

// Optional settings/properties of the DragResize object are:
//  enabled: Toggle whether the object is active.
//  handles[]: An array of drag handles to use (see the .JS file).
//  minWidth, minHeight: Minimum size to which elements are resized (in pixels).
//  minLeft, maxLeft, minTop, maxTop: Bounding box (in pixels).

// Next, you must define two functions, isElement and isHandle. These are passed
// a given DOM element, and must "return true" if the element in question is a
// draggable element or draggable handle. Here, I'm checking for the CSS classname
// of the elements, but you have have any combination of conditions you like:

dragresize.isElement = function(elm)
{
 if (elm.className && elm.className.indexOf('drsElement') > -1) return true;
};
dragresize.isHandle = function(elm)
{
 if (elm.className && elm.className.indexOf('drsMoveHandle') > -1) return true;
};

// You can define optional functions that are called as elements are dragged/resized.
// Some are passed true if the source event was a resize, or false if it's a drag.
// The focus/blur events are called as handles are added/removed from an object,
// and the others are called as users drag, move and release the object's handles.
// You might use these to examine the properties of the DragResize object to sync
// other page elements, etc.

dragresize.ondragfocus = function() { };
dragresize.ondragstart = function(isResize) { };
dragresize.ondragmove = function(isResize) { };
dragresize.ondragend = function(isResize) { };
dragresize.ondragblur = function() { };

// Finally, you must apply() your DragResize object to a DOM node; all children of this
// node will then be made draggable. Here, I'm applying to the entire document.
dragresize.apply(document);


$("#translateRegionBar").dblclick(function() {
showOrHide($('#translateRegionContents'));
collapseOrExpand($('#translateRegion'));
});

$("#chatRegionBar").dblclick(function() {
showOrHide($('#chatRegionContents'));
collapseOrExpand($('#chatRegion'));
});

$("#timeRegionBar").dblclick(function() {
showOrHide($('#timeRegionContents'));
collapseOrExpand($('#timeRegion'));
});

$("#scoreBoardRegionBar").dblclick(function() {
showOrHide($('#scoreBoardRegionContents'));
collapseOrExpand($('#scoreBoardRegion'));
});

//console.log("''' + gameid + '''");

//$("#notificationContainer").notify();

/** When user releases mouse over iframe, copy highlighted selection into textbox */
$('#frameConts').load(function() {
  $(document.getElementById('frameConts').contentWindow.document).mouseup(function(){
    copySelectedText();
  });
});

});
</script>
<body id='mainBody'>

<!--
<iframe src="proxy/<%= urlD %>" class='fullscreen' id='frameConts'>Your browser doesn't support iFrames.</iframe>



<div class="drsElement" id="translateRegion" style="background: #b0c4de; background-color: #b0c4de;">
 <div class="drsMoveHandle" id="translateRegionBar">Translate</div>
<div id="translateRegionContents">
<form action="" onsubmit='return submitNewTextBeingTranslated()'>
Suggest Text to be Translated: <input type='text' name='text_to_be_translated_suggestion' id='text_to_be_translated_suggestion' style='width: 70%;'></input>
</form>

Text Being Translated: <div name='text_being_translated' id='text_being_translated'></div>

<form action="" onsubmit='return submitNewTranslation()'>
Translation: <input type='text' name='add_translation' id='add_translation' style='width: 70%;'></input>
</form>
<div id="voting-region" style='width: 70%'></div>

</div>
</div>


<div class="drsElement" id="chatRegion" style="background: #b0c4de; background-color: #b0c4de;">
 <div class="drsMoveHandle" id="chatRegionBar">Chat</div>
 <div id="chatRegionContents" style="height: 100%">
  </div>
</div>

<div class="drsElement" id="timeRegion" style="background: #b0c4de; background-color: #b0c4de;">
 <div class="drsMoveHandle" id="timeRegionBar">Time</div>
 <div id="timeRegionContents">
<div id="timeDisplay" style="font-size: 26px; text-align: center;" >0</div>
</div>
</div>

<div class="drsElement" id="scoreBoardRegion" style="background: #b0c4de; background-color: #b0c4de;">
 <div class="drsMoveHandle" id="scoreBoardRegionBar">ScoreBoard</div>
 <div id="scoreBoardRegionContents" style="height: 100%">
<div id="scoreBoardDisplay" ></div>
</div>
</div>
-->

<div id="maincontent">
<iframe src="proxy/<%= urlD %>" class='fullscreen' id='frameConts'>Your browser doesn't support iFrames.</iframe>
</div>

<div id="topcontent">

<div id="translateRegionContents" style="width: 100%">
<!--
<form action="" onsubmit='return submitNewTextBeingTranslated()'>

<table width="100%" cellspacing="0" cellpadding="0">
<tr>
<td style="white-space: nowrap">
<label for="text_to_be_translated_suggestion" id='suggestTextLabel'>Suggest sentence from article to translate: &nbsp;</label>
</td>
<td width="100%">
<input type='text' name='text_to_be_translated_suggestion' id='text_to_be_translated_suggestion' style="width: 100%; border: 0; margin: 0; padding: 0"></input>
</td>
</tr>
</table>

</form>
-->
<div id='textSuggestionRegion'>
<div id='suggestTextLabel' style="float: left">Highlight a sentence from the article that you want to translate.</div><div style="float: left">&nbsp;</div><div id='text_to_be_translated_suggestion' style="float: left"></div><br/><br/></div>

<div id="translationRegionNoSuggestion" style="width: 100%">

<div id="voting-region"></div><br/>

<div style="float: left">Sentence being translated: &nbsp;</div><div name='text_being_translated' id='text_being_translated'></div>

<form action="" onsubmit='return submitNewTranslation()'>

<table width="100%" cellspacing="0" cellpadding="0">
<tr>
<td style="white-space: nowrap">
<div>Translation: &nbsp;</div>
</td>
<td width=100%>
<input type='text' name='add_translation' id='add_translation' style="width: 100%; border: 0; margin: 0; padding: 0"></input>
</td>
<td style="white-space: nowrap">
<input type="submit" value="Submit Translation"></input>
</td>
</tr>
</table>

</form>
</div>

</div>

</div>

<div id="framecontent">
<div id="roundTimerDisplay" style="visibility: hidden"><div style="text-align: center;" >Round ends in:</div><div id="timeDisplayContainer" style="text-align: center;" ><div id="timeDisplay" style="font-size: 26px; display: inline">0</div><div style="display: inline;"> seconds</div></div></div><br/>
<b>Scoreboard:</b>
<div id="scoreBoardRegionContents" ></div>
</div>

<div id="chatregionframe">
<div id="chatRegionContents" style="height: 100%"></div>
</div>

</body>
</html>
